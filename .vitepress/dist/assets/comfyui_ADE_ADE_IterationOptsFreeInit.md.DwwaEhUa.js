import{_ as t,c as e,o as i,a4 as a}from"./chunks/framework.DpC1ZpOZ.js";const h=JSON.parse('{"title":"Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"comfyui/ADE/ADE_IterationOptsFreeInit.md","filePath":"comfyui/ADE/ADE_IterationOptsFreeInit.md"}'),l={name:"comfyui/ADE/ADE_IterationOptsFreeInit.md"},n=a(`<h1 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h1><ul><li>Class name: FreeInitOptionsNode</li><li>Category: Animate Diff 🎭🅐🅓/iteration opts</li><li>Output node: False</li><li>Repo Ref: <a href="https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git" target="_blank" rel="noreferrer">https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git</a></li></ul><p>FreeInitOptionsNode 旨在为动画过程创建迭代选项提供便利，专注于使用可定制的过滤器和参数对初始化阶段进行优化，以提高动画的质量和特性。</p><h1 id="input-types" tabindex="-1">Input types <a class="header-anchor" href="#input-types" aria-label="Permalink to &quot;Input types&quot;">​</a></h1><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h2><ul><li>iterations <ul><li>迭代次数对于确定动画过程的范围至关重要。它决定了过程将重复多少次，影响着动画的整体结果和细节水平。</li><li>Comfy dtype: INT</li><li>Python dtype: int</li></ul></li><li>filter <ul><li>过滤器参数对于应用特定类型的噪声至动画至关重要，它可以显著影响动画的风格化结果以及帧与帧之间过渡的平滑度。</li><li>Comfy dtype: FreeInitFilter.LIST</li><li>Python dtype: Union[str, comfy.sample.FreeInitFilter]</li></ul></li><li>d_s <ul><li>d_s 参数在控制应用于动画的噪声的空间频率中起着关键作用，这可以影响最终输出的纹理和细节。</li><li>Comfy dtype: FLOAT</li><li>Python dtype: float</li></ul></li><li>d_t <ul><li>d_t 参数对于调整噪声的时间频率很重要，它影响着噪声随时间的变化以及对动画动态的贡献。</li><li>Comfy dtype: FLOAT</li><li>Python dtype: float</li></ul></li><li>n_butterworth <ul><li>n_butterworth 参数对于定义要使用的巴特沃斯滤波器的数量很重要，它可以细化噪声的质量及其对动画清晰度的影响。</li><li>Comfy dtype: INT</li><li>Python dtype: int</li></ul></li><li>sigma_step <ul><li>sigma_step 参数对于确定应用 sigma 值的步骤至关重要，它可以影响整个动画中噪声的强度和进展。</li><li>Comfy dtype: INT</li><li>Python dtype: int</li></ul></li><li>apply_to_1st_iter <ul><li>apply_to_1st_iter 标志对于决定是否将初始化设置应用于第一次迭代很重要。这可以影响动画的起始点及其初始外观。</li><li>Comfy dtype: BOOLEAN</li><li>Python dtype: bool</li></ul></li><li>init_type <ul><li>init_type 参数决定了用于动画的初始化方法，这可以显著改变动画的起始特性和整个动画过程的行为。</li><li>Comfy dtype: FreeInitOptions.LIST</li><li>Python dtype: str</li></ul></li></ul><h2 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h2><ul><li>iter_batch_offset <ul><li>iter_batch_offset 参数虽然是可选的，但可以用来调整迭代的批次偏移量，这有助于管理动画帧的顺序及其处理顺序。</li><li>Comfy dtype: INT</li><li>Python dtype: int</li></ul></li><li>iter_seed_offset <ul><li>iter_seed_offset 参数也是可选的，允许调整迭代的种子偏移量，这可以在动画序列中引入变化，并影响输出的随机性。</li><li>Comfy dtype: INT</li><li>Python dtype: int</li></ul></li></ul><h1 id="output-types" tabindex="-1">Output types <a class="header-anchor" href="#output-types" aria-label="Permalink to &quot;Output types&quot;">​</a></h1><ul><li>iteration_options <ul><li>此节点生成的迭代选项对于指导动画过程的后续步骤至关重要，为帧的生成和优化设定了基础。</li><li>Comfy dtype: ITERATION_OPTS</li><li>Python dtype: FreeInitOptions</li></ul></li></ul><h1 id="usage-tips" tabindex="-1">Usage tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage tips&quot;">​</a></h1><ul><li>Infra type: CPU</li></ul><h1 id="source-code" tabindex="-1">Source code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source code&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>class FreeInitOptionsNode:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @classmethod</span></span>
<span class="line"><span>    def INPUT_TYPES(s):</span></span>
<span class="line"><span>        return {&#39;required&#39;: {&#39;iterations&#39;: (&#39;INT&#39;, {&#39;default&#39;: 2, &#39;min&#39;: 1}), &#39;filter&#39;: (FreeInitFilter.LIST,), &#39;d_s&#39;: (&#39;FLOAT&#39;, {&#39;default&#39;: 0.25, &#39;min&#39;: 0.0, &#39;max&#39;: 1.0, &#39;step&#39;: 0.001}), &#39;d_t&#39;: (&#39;FLOAT&#39;, {&#39;default&#39;: 0.25, &#39;min&#39;: 0.0, &#39;max&#39;: 1.0, &#39;step&#39;: 0.001}), &#39;n_butterworth&#39;: (&#39;INT&#39;, {&#39;default&#39;: 4, &#39;min&#39;: 1, &#39;max&#39;: 100}), &#39;sigma_step&#39;: (&#39;INT&#39;, {&#39;default&#39;: 999, &#39;min&#39;: 1, &#39;max&#39;: 999}), &#39;apply_to_1st_iter&#39;: (&#39;BOOLEAN&#39;, {&#39;default&#39;: False}), &#39;init_type&#39;: (FreeInitOptions.LIST,)}, &#39;optional&#39;: {&#39;iter_batch_offset&#39;: (&#39;INT&#39;, {&#39;default&#39;: 0, &#39;min&#39;: 0, &#39;max&#39;: BIGMAX}), &#39;iter_seed_offset&#39;: (&#39;INT&#39;, {&#39;default&#39;: 1, &#39;min&#39;: BIGMIN, &#39;max&#39;: BIGMAX})}}</span></span>
<span class="line"><span>    RETURN_TYPES = (&#39;ITERATION_OPTS&#39;,)</span></span>
<span class="line"><span>    CATEGORY = &#39;Animate Diff 🎭🅐🅓/iteration opts&#39;</span></span>
<span class="line"><span>    FUNCTION = &#39;create_iter_opts&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def create_iter_opts(self, iterations: int, filter: str, d_s: float, d_t: float, n_butterworth: int, sigma_step: int, apply_to_1st_iter: bool, init_type: str, iter_batch_offset: int=0, iter_seed_offset: int=1):</span></span>
<span class="line"><span>        iter_opts = FreeInitOptions(iterations=iterations, step=sigma_step, apply_to_1st_iter=apply_to_1st_iter, filter=filter, d_s=d_s, d_t=d_t, n=n_butterworth, init_type=init_type, iter_batch_offset=iter_batch_offset, iter_seed_offset=iter_seed_offset)</span></span>
<span class="line"><span>        return (iter_opts,)</span></span></code></pre></div>`,14),s=[n];function o(p,r,d,_,u,f){return i(),e("div",null,s)}const y=t(l,[["render",o]]);export{h as __pageData,y as default};
