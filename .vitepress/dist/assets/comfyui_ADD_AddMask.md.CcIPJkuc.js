import{_ as a,c as s,o as e,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const k=JSON.parse('{"title":"Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"comfyui/ADD/AddMask.md","filePath":"comfyui/ADD/AddMask.md"}'),n={name:"comfyui/ADD/AddMask.md"},i=t(`<h1 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h1><ul><li>Class name: AddMask</li><li>Category: ImpactPack/Operation</li><li>Output node: False</li><li>Repo Ref: <a href="https://github.com/ltdrdata/ComfyUI-Impact-Pack.git" target="_blank" rel="noreferrer">https://github.com/ltdrdata/ComfyUI-Impact-Pack.git</a></li></ul><p>AddMask节点旨在对两个二进制掩码执行逐像素加法。它用于以保留原始掩码完整性的方式组合掩码图像，同时创建一个新的掩码，代表它们的联合。</p><h1 id="input-types" tabindex="-1">Input types <a class="header-anchor" href="#input-types" aria-label="Permalink to &quot;Input types&quot;">​</a></h1><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h2><ul><li>mask1 <ul><li>第一个要添加的掩码。它是一个关键组件，因为它有助于形成结果掩码，决定了将包含在最终组合掩码中的区域。</li><li>Comfy dtype: MASK</li><li>Python dtype: torch.Tensor</li></ul></li><li>mask2 <ul><li>第二个要添加的掩码。像第一个掩码一样，它在定义输出掩码方面起着重要作用，通过贡献包含在组合结果中的区域。</li><li>Comfy dtype: MASK</li><li>Python dtype: torch.Tensor</li></ul></li></ul><h1 id="output-types" tabindex="-1">Output types <a class="header-anchor" href="#output-types" aria-label="Permalink to &quot;Output types&quot;">​</a></h1><ul><li>mask <ul><li>输出是一个新的二进制掩码，由输入掩码相加得到。它表示两个输入掩码的联合，指示两个掩码重叠的区域。</li><li>Comfy dtype: MASK</li><li>Python dtype: torch.Tensor</li></ul></li></ul><h1 id="usage-tips" tabindex="-1">Usage tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage tips&quot;">​</a></h1><ul><li>Infra type: CPU</li></ul><h1 id="source-code" tabindex="-1">Source code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source code&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>class AddMask:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @classmethod</span></span>
<span class="line"><span>    def INPUT_TYPES(s):</span></span>
<span class="line"><span>        return {&#39;required&#39;: {&#39;mask1&#39;: (&#39;MASK&#39;,), &#39;mask2&#39;: (&#39;MASK&#39;,)}}</span></span>
<span class="line"><span>    RETURN_TYPES = (&#39;MASK&#39;,)</span></span>
<span class="line"><span>    FUNCTION = &#39;doit&#39;</span></span>
<span class="line"><span>    CATEGORY = &#39;ImpactPack/Operation&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def doit(self, mask1, mask2):</span></span>
<span class="line"><span>        mask = add_masks(mask1, mask2)</span></span>
<span class="line"><span>        return (mask,)</span></span></code></pre></div>`,12),l=[i];function p(o,r,d,c,u,h){return e(),s("div",null,l)}const _=a(n,[["render",p]]);export{k as __pageData,_ as default};
