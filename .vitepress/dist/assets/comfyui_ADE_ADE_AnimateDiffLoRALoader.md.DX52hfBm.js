import{_ as a,c as n,o as e,a4 as o}from"./chunks/framework.DpC1ZpOZ.js";const h=JSON.parse('{"title":"Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"comfyui/ADE/ADE_AnimateDiffLoRALoader.md","filePath":"comfyui/ADE/ADE_AnimateDiffLoRALoader.md"}'),s={name:"comfyui/ADE/ADE_AnimateDiffLoRALoader.md"},t=o(`<h1 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h1><ul><li>Class name: AnimateDiffLoraLoader</li><li>Category: Animate Diff 🎭🅐🅓</li><li>Output node: False</li><li>Repo Ref: <a href="https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git" target="_blank" rel="noreferrer">https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git</a></li></ul><p>AnimateDiffLoraLoader节点旨在方便地加载和应用运动Lora模型到主体上。它能够根据指定的强度混合不同的Lora模型，允许对动画进行精细控制。在需要将多个运动影响集成到一起的字符动画任务中，这个节点至关重要。</p><h1 id="input-types" tabindex="-1">Input types <a class="header-anchor" href="#input-types" aria-label="Permalink to &quot;Input types&quot;">​</a></h1><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h2><ul><li>lora_name <ul><li>参数&#39;lora_name&#39;对于识别要加载的特定运动Lora模型至关重要。它确保从可用选项中正确选择模型，这对于节点的操作和最终的动画效果至关重要。</li><li>Comfy dtype: STRING</li><li>Python dtype: str</li></ul></li><li>strength <ul><li>参数&#39;strength&#39;决定运动Lora对动画影响的强度。它是微调动画以实现所需效果的关键因素，允许在不同的运动层之间保持平衡。</li><li>Comfy dtype: FLOAT</li><li>Python dtype: float</li></ul></li></ul><h2 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h2><ul><li>prev_motion_lora <ul><li>参数&#39;prev_motion_lora&#39;用于提供之前运动Lora模型的状态。它对于保持动画序列的连贯性很重要，并允许为复杂的动画效果叠加多个Lora模型。</li><li>Comfy dtype: MOTION_LORA</li><li>Python dtype: MotionLoraList</li></ul></li></ul><h1 id="output-types" tabindex="-1">Output types <a class="header-anchor" href="#output-types" aria-label="Permalink to &quot;Output types&quot;">​</a></h1><ul><li>MOTION_LORA <ul><li>输出&#39;MOTION_LORA&#39;表示应用了指定强度并与任何之前的运动Lora模型混合后的结果运动Lora模型。它对后续的动画步骤很重要，并作为进一步角色动画的基础。</li><li>Comfy dtype: MOTION_LORA</li><li>Python dtype: MotionLoraList</li></ul></li></ul><h1 id="usage-tips" tabindex="-1">Usage tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage tips&quot;">​</a></h1><ul><li>Infra type: CPU</li></ul><h1 id="source-code" tabindex="-1">Source code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source code&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>class AnimateDiffLoraLoader:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @classmethod</span></span>
<span class="line"><span>    def INPUT_TYPES(s):</span></span>
<span class="line"><span>        return {&#39;required&#39;: {&#39;lora_name&#39;: (get_available_motion_loras(),), &#39;strength&#39;: (&#39;FLOAT&#39;, {&#39;default&#39;: 1.0, &#39;min&#39;: 0.0, &#39;max&#39;: 10.0, &#39;step&#39;: 0.001})}, &#39;optional&#39;: {&#39;prev_motion_lora&#39;: (&#39;MOTION_LORA&#39;,)}}</span></span>
<span class="line"><span>    RETURN_TYPES = (&#39;MOTION_LORA&#39;,)</span></span>
<span class="line"><span>    CATEGORY = &#39;Animate Diff 🎭🅐🅓&#39;</span></span>
<span class="line"><span>    FUNCTION = &#39;load_motion_lora&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def load_motion_lora(self, lora_name: str, strength: float, prev_motion_lora: MotionLoraList=None):</span></span>
<span class="line"><span>        if prev_motion_lora is None:</span></span>
<span class="line"><span>            prev_motion_lora = MotionLoraList()</span></span>
<span class="line"><span>        else:</span></span>
<span class="line"><span>            prev_motion_lora = prev_motion_lora.clone()</span></span>
<span class="line"><span>        lora_path = get_motion_lora_path(lora_name)</span></span>
<span class="line"><span>        if not Path(lora_path).is_file():</span></span>
<span class="line"><span>            raise FileNotFoundError(f&quot;Motion lora with name &#39;{lora_name}&#39; not found.&quot;)</span></span>
<span class="line"><span>        lora_info = MotionLoraInfo(name=lora_name, strength=strength)</span></span>
<span class="line"><span>        prev_motion_lora.add_lora(lora_info)</span></span>
<span class="line"><span>        return (prev_motion_lora,)</span></span></code></pre></div>`,14),i=[t];function l(p,r,d,u,_,c){return e(),n("div",null,i)}const f=a(s,[["render",l]]);export{h as __pageData,f as default};
