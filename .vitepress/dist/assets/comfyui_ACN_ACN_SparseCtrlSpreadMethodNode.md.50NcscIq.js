import{_ as e,c as a,o as s,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const _=JSON.parse('{"title":"ACN_SparseCtrlSpreadMethodNode","description":"","frontmatter":{},"headers":[],"relativePath":"comfyui/ACN/ACN_SparseCtrlSpreadMethodNode.md","filePath":"comfyui/ACN/ACN_SparseCtrlSpreadMethodNode.md"}'),n={name:"comfyui/ACN/ACN_SparseCtrlSpreadMethodNode.md"},p=t(`<h1 id="acn-sparsectrlspreadmethodnode" tabindex="-1">ACN_SparseCtrlSpreadMethodNode <a class="header-anchor" href="#acn-sparsectrlspreadmethodnode" aria-label="Permalink to &quot;ACN_SparseCtrlSpreadMethodNode&quot;">​</a></h1><ul><li>Class name: SparseSpreadMethodNode</li><li>Category: Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl</li><li>Output node: False</li><li>Repo Ref: <a href="https://github.com/Kosinkadink/ComfyUI-Advanced-ControlNet.git" target="_blank" rel="noreferrer">https://github.com/Kosinkadink/ComfyUI-Advanced-ControlNet.git</a></li></ul><p>SparseSpreadMethodNode 类旨在生成和管理给定范围内的稀疏索引分布。它抽象地处理了不同扩散方法的逻辑，例如均匀、开始、结束和中心，允许灵活处理稀疏数据。</p><h1 id="input-types" tabindex="-1">Input types <a class="header-anchor" href="#input-types" aria-label="Permalink to &quot;Input types&quot;">​</a></h1><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h2><ul><li>spread <ul><li>参数 &#39;spread&#39; 决定了稀疏索引如何在整个长度范围内分布。它对节点的操作至关重要，因为它决定了稀疏数据生成的模式，这可能显著影响过程的结果。</li><li>Comfy dtype: str</li><li>Python dtype: str</li></ul></li></ul><h1 id="output-types" tabindex="-1">Output types <a class="header-anchor" href="#output-types" aria-label="Permalink to &quot;Output types&quot;">​</a></h1><ul><li>SPARSE_METHOD <ul><li>输出参数 &#39;SPARSE_METHOD&#39; 表示用于扩散索引的方法。它很重要，因为它封装了所选扩散策略的逻辑，这对于依赖于稀疏索引分布的下游任务至关重要。</li><li>Comfy dtype: SparseSpreadMethod</li><li>Python dtype: SparseSpreadMethod</li></ul></li></ul><h1 id="usage-tips" tabindex="-1">Usage tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage tips&quot;">​</a></h1><ul><li>Infra type: CPU</li></ul><h1 id="source-code" tabindex="-1">Source code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source code&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>class SparseSpreadMethodNode:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @classmethod</span></span>
<span class="line"><span>    def INPUT_TYPES(s):</span></span>
<span class="line"><span>        return {&#39;required&#39;: {&#39;spread&#39;: (SparseSpreadMethod.LIST,)}}</span></span>
<span class="line"><span>    RETURN_TYPES = (&#39;SPARSE_METHOD&#39;,)</span></span>
<span class="line"><span>    FUNCTION = &#39;get_method&#39;</span></span>
<span class="line"><span>    CATEGORY = &#39;Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def get_method(self, spread: str):</span></span>
<span class="line"><span>        return (SparseSpreadMethod(spread=spread),)</span></span></code></pre></div>`,12),r=[p];function l(o,d,i,c,h,u){return s(),a("div",null,r)}const C=e(n,[["render",l]]);export{_ as __pageData,C as default};
