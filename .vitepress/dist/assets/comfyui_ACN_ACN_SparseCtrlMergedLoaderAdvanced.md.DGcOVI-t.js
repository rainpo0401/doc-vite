import{_ as e,c as a,o as t,a4 as n}from"./chunks/framework.DpC1ZpOZ.js";const h=JSON.parse('{"title":"ACN_SparseCtrlMergedLoaderAdvanced","description":"","frontmatter":{},"headers":[],"relativePath":"comfyui/ACN/ACN_SparseCtrlMergedLoaderAdvanced.md","filePath":"comfyui/ACN/ACN_SparseCtrlMergedLoaderAdvanced.md"}'),s={name:"comfyui/ACN/ACN_SparseCtrlMergedLoaderAdvanced.md"},l=n(`<h1 id="acn-sparsectrlmergedloaderadvanced" tabindex="-1">ACN_SparseCtrlMergedLoaderAdvanced <a class="header-anchor" href="#acn-sparsectrlmergedloaderadvanced" aria-label="Permalink to &quot;ACN_SparseCtrlMergedLoaderAdvanced&quot;">​</a></h1><ul><li>Class name: SparseCtrlMergedLoaderAdvanced</li><li>Category: Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental</li><li>Output node: False</li><li>Repo Ref: <a href="https://github.com/Kosinkadink/ComfyUI-Advanced-ControlNet.git" target="_blank" rel="noreferrer">https://github.com/Kosinkadink/ComfyUI-Advanced-ControlNet.git</a></li></ul><p>SparseCtrlMergedLoaderAdvanced 节点旨在高效管理和加载具有稀疏控制特性的高级控制网络。它将运动特性集成到控制网络中，允许基于运动强度和规模参数进行动态和自适应控制。此节点对于需要对复杂系统进行精细控制的应用至关重要，确保了运动和控制的无缝融合，以提高性能。</p><h1 id="input-types" tabindex="-1">Input types <a class="header-anchor" href="#input-types" aria-label="Permalink to &quot;Input types&quot;">​</a></h1><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h2><ul><li>sparsectrl_name <ul><li>参数 &#39;sparsectrl_name&#39; 指定要加载的稀疏控制模型的名称，这对于识别和访问正确的控制设置至关重要。此参数对节点的操作至关重要，因为它直接影响应用的控制能力。</li><li>Comfy dtype: str</li><li>Python dtype: str</li></ul></li><li>control_net_name <ul><li>参数 &#39;control_net_name&#39; 用于定义控制网络模型的名称。它在节点的功能中扮演重要角色，因为它决定了要使用的特定控制网络，影响整体的控制策略。</li><li>Comfy dtype: str</li><li>Python dtype: str</li></ul></li><li>use_motion <ul><li>参数 &#39;use_motion&#39; 指示是否应将运动特性纳入控制网络。这是一个重要参数，因为它启用或禁用了基于运动的控制的动态适应，导致不同的控制行为。</li><li>Comfy dtype: bool</li><li>Python dtype: bool</li></ul></li><li>motion_strength <ul><li>参数 &#39;motion_strength&#39; 调整控制网络内运动效果的强度。这是一个关键参数，允许用户微调运动对控制结果的影响，从而定制控制响应。</li><li>Comfy dtype: float</li><li>Python dtype: float</li></ul></li><li>motion_scale <ul><li>参数 &#39;motion_scale&#39; 定义应用于控制网络的运动效果的规模。它是一个有影响力的参数，修改了运动整合的范围，影响了整体控制动态。</li><li>Comfy dtype: float</li><li>Python dtype: float</li></ul></li></ul><h2 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h2><ul><li>sparse_method <ul><li>参数 &#39;sparse_method&#39; 选择控制网络内处理稀疏数据的方法。虽然它是可选的，但它可以显著影响稀疏数据的处理方式，可能改变节点的性能。</li><li>Comfy dtype: SPARSE_METHOD</li><li>Python dtype: SparseMethod</li></ul></li><li>tk_optional <ul><li>提供的 &#39;tk_optional&#39; 参数可以提供控制网络中时间步关键帧的额外控制。这个可选参数可以用来指定特定的关键帧，以实现更细粒度的控制。</li><li>Comfy dtype: TIMESTEP_KEYFRAME</li><li>Python dtype: TimestepKeyframeGroup</li></ul></li></ul><h1 id="output-types" tabindex="-1">Output types <a class="header-anchor" href="#output-types" aria-label="Permalink to &quot;Output types&quot;">​</a></h1><ul><li>CONTROL_NET <ul><li>输出 &#39;CONTROL_NET&#39; 表示已加载的具有集成运动特性的控制网络。它是一个复杂的数据结构，封装了控制设置和运动参数，准备在更高级别的控制系统中应用。</li><li>Comfy dtype: CONTROL_NET</li><li>Python dtype: ControlNetAdvanced</li></ul></li></ul><h1 id="usage-tips" tabindex="-1">Usage tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage tips&quot;">​</a></h1><ul><li>Infra type: GPU</li></ul><h1 id="source-code" tabindex="-1">Source code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source code&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>class SparseCtrlMergedLoaderAdvanced:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @classmethod</span></span>
<span class="line"><span>    def INPUT_TYPES(s):</span></span>
<span class="line"><span>        return {&#39;required&#39;: {&#39;sparsectrl_name&#39;: (folder_paths.get_filename_list(&#39;controlnet&#39;),), &#39;control_net_name&#39;: (folder_paths.get_filename_list(&#39;controlnet&#39;),), &#39;use_motion&#39;: (&#39;BOOLEAN&#39;, {&#39;default&#39;: True}), &#39;motion_strength&#39;: (&#39;FLOAT&#39;, {&#39;default&#39;: 1.0, &#39;min&#39;: 0.0, &#39;max&#39;: 10.0, &#39;step&#39;: 0.001}), &#39;motion_scale&#39;: (&#39;FLOAT&#39;, {&#39;default&#39;: 1.0, &#39;min&#39;: 0.0, &#39;max&#39;: 10.0, &#39;step&#39;: 0.001})}, &#39;optional&#39;: {&#39;sparse_method&#39;: (&#39;SPARSE_METHOD&#39;,), &#39;tk_optional&#39;: (&#39;TIMESTEP_KEYFRAME&#39;,)}}</span></span>
<span class="line"><span>    RETURN_TYPES = (&#39;CONTROL_NET&#39;,)</span></span>
<span class="line"><span>    FUNCTION = &#39;load_controlnet&#39;</span></span>
<span class="line"><span>    CATEGORY = &#39;Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def load_controlnet(self, sparsectrl_name: str, control_net_name: str, use_motion: bool, motion_strength: float, motion_scale: float, sparse_method: SparseMethod=SparseSpreadMethod(), tk_optional: TimestepKeyframeGroup=None):</span></span>
<span class="line"><span>        sparsectrl_path = folder_paths.get_full_path(&#39;controlnet&#39;, sparsectrl_name)</span></span>
<span class="line"><span>        controlnet_path = folder_paths.get_full_path(&#39;controlnet&#39;, control_net_name)</span></span>
<span class="line"><span>        sparse_settings = SparseSettings(sparse_method=sparse_method, use_motion=use_motion, motion_strength=motion_strength, motion_scale=motion_scale, merged=True)</span></span>
<span class="line"><span>        controlnet = load_controlnet(controlnet_path, timestep_keyframe=tk_optional)</span></span>
<span class="line"><span>        if controlnet is None or type(controlnet) != ControlNetAdvanced:</span></span>
<span class="line"><span>            raise ValueError(f&#39;controlnet_path must point to a normal ControlNet, but instead: {type(controlnet).__name__}&#39;)</span></span>
<span class="line"><span>        sparsectrl = load_sparsectrl(sparsectrl_path, timestep_keyframe=tk_optional, sparse_settings=SparseSettings.default())</span></span>
<span class="line"><span>        new_state_dict = controlnet.control_model.state_dict()</span></span>
<span class="line"><span>        for (key, value) in sparsectrl.control_model.motion_holder.motion_wrapper.state_dict().items():</span></span>
<span class="line"><span>            new_state_dict[key] = value</span></span>
<span class="line"><span>        sparsectrl = load_sparsectrl(sparsectrl_path, controlnet_data=new_state_dict, timestep_keyframe=tk_optional, sparse_settings=sparse_settings)</span></span>
<span class="line"><span>        return (sparsectrl,)</span></span></code></pre></div>`,14),o=[l];function r(p,i,d,c,_,u){return t(),a("div",null,o)}const f=e(s,[["render",r]]);export{h as __pageData,f as default};
