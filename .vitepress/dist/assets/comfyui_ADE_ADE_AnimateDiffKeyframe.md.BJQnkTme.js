import{_ as e,c as a,o as n,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const _=JSON.parse('{"title":"Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"comfyui/ADE/ADE_AnimateDiffKeyframe.md","filePath":"comfyui/ADE/ADE_AnimateDiffKeyframe.md"}'),i={name:"comfyui/ADE/ADE_AnimateDiffKeyframe.md"},s=t(`<h1 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h1><ul><li>Class name: ADKeyframeNode</li><li>Category: Animate Diff 🎭🅐🅓</li><li>Output node: False</li><li>Repo Ref: <a href="https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git" target="_blank" rel="noreferrer">https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git</a></li></ul><p>ADKeyframeNode 类用于管理动画差异的关键帧。它提供加载和操作关键帧的功能，确保动画序列的连贯性和明确性。此节点对于创建平滑过渡和维护整个动画序列的完整性至关重要。</p><h1 id="input-types" tabindex="-1">Input types <a class="header-anchor" href="#input-types" aria-label="Permalink to &quot;Input types&quot;">​</a></h1><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h2><ul><li>start_percent <ul><li>start_percent 参数定义了关键帧在动画时间线中的起始位置。它对于确定动画的时机和确保关键帧序列的正确排序至关重要。</li><li>Comfy dtype: FLOAT</li><li>Python dtype: float</li></ul></li></ul><h2 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h2><ul><li>prev_ad_keyframes <ul><li>prev_ad_keyframes 参数允许用户提供一组先前的关键帧，新的关键帧将被添加到这些关键帧中。这对于保持连续性并在现有动画框架上构建至关重要。</li><li>Comfy dtype: AD_KEYFRAMES</li><li>Python dtype: ADKeyframeGroup</li></ul></li><li>scale_multival <ul><li>scale_multival 参数调整关键帧处动画的缩放。它对于控制动画变化的强度和在序列特定点的范围至关重要。</li><li>Comfy dtype: MULTIVAL</li><li>Python dtype: Union[float, torch.Tensor]</li></ul></li><li>effect_multival <ul><li>effect_multival 参数用于修改关键帧处的效果强度。它在微调动画在特定时刻的视觉影响中起着至关重要的作用。</li><li>Comfy dtype: MULTIVAL</li><li>Python dtype: Union[float, torch.Tensor]</li></ul></li><li>inherit_missing <ul><li>inherit_missing 参数决定关键帧是否应该从先前的关键帧继承属性，如果它们没有被明确定义的话。这对于维护整个序列中一致的动画风格至关重要。</li><li>Comfy dtype: BOOLEAN</li><li>Python dtype: bool</li></ul></li><li>guarantee_steps <ul><li>guarantee_steps 参数确保关键帧之间的最小步数，这对于动画的平滑度和流畅性很重要。</li><li>Comfy dtype: INT</li><li>Python dtype: int</li></ul></li></ul><h1 id="output-types" tabindex="-1">Output types <a class="header-anchor" href="#output-types" aria-label="Permalink to &quot;Output types&quot;">​</a></h1><ul><li>AD_KEYFRAMES <ul><li>ADKeyframeNode 的输出是一组关键帧，代表了带有新添加或修改的关键帧的动画序列。这个输出对于动画的后续处理和渲染非常重要。</li><li>Comfy dtype: AD_KEYFRAMES</li><li>Python dtype: ADKeyframeGroup</li></ul></li></ul><h1 id="usage-tips" tabindex="-1">Usage tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage tips&quot;">​</a></h1><ul><li>Infra type: CPU</li></ul><h1 id="source-code" tabindex="-1">Source code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source code&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>class ADKeyframeNode:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @classmethod</span></span>
<span class="line"><span>    def INPUT_TYPES(s):</span></span>
<span class="line"><span>        return {&#39;required&#39;: {&#39;start_percent&#39;: (&#39;FLOAT&#39;, {&#39;default&#39;: 0.0, &#39;min&#39;: 0.0, &#39;max&#39;: 1.0, &#39;step&#39;: 0.001})}, &#39;optional&#39;: {&#39;prev_ad_keyframes&#39;: (&#39;AD_KEYFRAMES&#39;,), &#39;scale_multival&#39;: (&#39;MULTIVAL&#39;,), &#39;effect_multival&#39;: (&#39;MULTIVAL&#39;,), &#39;inherit_missing&#39;: (&#39;BOOLEAN&#39;, {&#39;default&#39;: True}), &#39;guarantee_steps&#39;: (&#39;INT&#39;, {&#39;default&#39;: 1, &#39;min&#39;: 0, &#39;max&#39;: BIGMAX})}}</span></span>
<span class="line"><span>    RETURN_TYPES = (&#39;AD_KEYFRAMES&#39;,)</span></span>
<span class="line"><span>    FUNCTION = &#39;load_keyframe&#39;</span></span>
<span class="line"><span>    CATEGORY = &#39;Animate Diff 🎭🅐🅓&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def load_keyframe(self, start_percent: float, prev_ad_keyframes=None, scale_multival: Union[float, torch.Tensor]=None, effect_multival: Union[float, torch.Tensor]=None, inherit_missing: bool=True, guarantee_steps: int=1):</span></span>
<span class="line"><span>        if not prev_ad_keyframes:</span></span>
<span class="line"><span>            prev_ad_keyframes = ADKeyframeGroup()</span></span>
<span class="line"><span>        prev_ad_keyframes = prev_ad_keyframes.clone()</span></span>
<span class="line"><span>        keyframe = ADKeyframe(start_percent=start_percent, scale_multival=scale_multival, effect_multival=effect_multival, inherit_missing=inherit_missing, guarantee_steps=guarantee_steps)</span></span>
<span class="line"><span>        prev_ad_keyframes.add(keyframe)</span></span>
<span class="line"><span>        return (prev_ad_keyframes,)</span></span></code></pre></div>`,14),l=[s];function p(r,o,u,c,f,d){return n(),a("div",null,l)}const h=e(i,[["render",p]]);export{_ as __pageData,h as default};
